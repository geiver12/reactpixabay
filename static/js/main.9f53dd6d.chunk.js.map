{"version":3,"sources":["components/Search.js","components/Image.js","components/Pagination.js","components/Answer.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","searchRef","React","createRef","HandleData","e","preventDefault","term","current","value","DataSearch","state","onSubmit","this","className","type","ref","placeholder","Component","Image","image","largeImageURL","likes","previewURL","tags","views","src","alt","href","target","Pagination","onClick","pagePrev","pageNext","Answer","ShowImages","images","length","Fragment","map","key","id","App","page","scroll","document","querySelector","scrollIntoView","setState","queryApy","url","fetch","then","answer","json","hits","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f53dd6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n//cc escribir para generar este esqueleto\nclass Search extends Component {\n\n    searchRef=React.createRef();\n\n    HandleData=(e)=>{\n            e.preventDefault();\n            const term=this.searchRef.current.value;\n            this.props.DataSearch(term);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <form onSubmit={this.HandleData}>\n                <div className=\"row\">\n                    \n                    <div className=\"form-group col-md-8\">\n                        <input type=\"text\" ref={this.searchRef} className=\"form-control form-control-lg\" placeholder=\"Search your image!!\"/>\n\n                    </div>\n                    <div className=\"form-group col-md-4\">\n                        <input type=\"submit\" className=\"btn btn-lg btn-danger btn-block\"  value=\"Search..\"/>\n\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Search;","import React from 'react';\n\nconst Image = (props) => {\n\n    const{\n        largeImageURL,\n        likes,\n        previewURL,tags,views}= props.image;\n\n    return (\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\n            <div className=\"card\">\n                <img src={previewURL} alt={tags} className=\"card-img-top\"/>\n                    <div className=\"card-body\" >\n                        <p className=\"card-text\">{likes} Likes</p>\n                        <p className=\"card-text\">{views} Views</p>\n                        <a href={largeImageURL} target=\"_blank\" className=\"btn btn-primary btn-block\">Show Image</a>\n                    </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Image;","import React from 'react';\n\nconst Pagination = (props) => {\n\n\n    return (\n        <div className=\"py-3\">\n            <button type=\"button\" onClick={props.pagePrev} className=\"btn btn-info mr-1\"> Preview! </button>\n            <button type=\"button\" onClick={props.pageNext} className=\"btn btn-info\"> Next! </button>\n                     \n         </div>\n            \n    )\n\n}\n\nexport default Pagination;","import React, { Component } from 'react';\nimport Image from './Image';\nimport Pagination from './Pagination';\n\nclass Answer extends Component {\n    ShowImages=()=>{\n        const images=this.props.images;\n        if(this.props.term.length === 0) return null;\n       \n        return (<React.Fragment>\n            <div className=\"col-12 p-5 row\">\n            {\n                images.map( image => (\n                    <Image  key={image.id} image={image}/>\n                ))\n            }\n            </div>\n            <Pagination pagePrev={this.props.pagePrev} pageNext={this.props.pageNext}/>\n        </React.Fragment>)\n    }\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <React.Fragment>\n            {this.ShowImages()}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Answer;","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport Answer from './components/Answer';\n\nclass  App extends Component {\n  state = {term:'',images:[],page:''};\n  constructor(props) {\n    super(props);\n    this.state = {term:'',images:[],page:''};\n}\n\nscroll=()=>{\n  const element= document.querySelector('.jumbotron');\n  element.scrollIntoView('instant','start');\n}\n\npagePrev=()=>{\n  \n    let page=this.state.page;\n\n    if(page===1) return null;\n  \n    page-=1;\n\n    this.setState({\n      page\n    },()=>{\n      this.queryApy();\n    this.scroll();});\n}\n\npageNext=()=>{\n  let page=this.state.page;\n\n  page+=1;\n\n  this.setState({\n    page\n  },()=>{\n    this.queryApy();\n    this.scroll();\n  }\n  );\n}\n\nqueryApy=()=>{\n  const term=this.state.term;\n  const page=this.state.page;\n  const url=`https://pixabay.com/api/?key=5141530-24d02f0c92c4e2d1cab593e8e&q=${term}&per_page=30&page=${page}`;\n\n  fetch(url).then(answer=>answer.json()).then(answer=>this.setState({images:answer.hits}))\n  \n  \n}\n\n  DataSearch=(term)=>{\n    this.setState({term:term,page:1},()=>{this.queryApy(); })\n  }\n\n  render(){\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <p className=\"lead text-center\"> Search Image!!</p>\n        <Search DataSearch={this.DataSearch }/>\n      </div>\n      <div className=\"row justify-content-center\">\n      <Answer images={this.state.images} term={this.state.term} pagePrev={this.pagePrev} pageNext={this.pageNext}/>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}